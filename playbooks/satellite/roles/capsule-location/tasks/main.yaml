---
# Create location for this capsule if it does not exist yet and move the location there
# Client domain is added to the location
- name: "Get id of a domain"
  uri:
    url: "https://{{ groups['satellite6']|first }}/api/domains/{{ capsule_domain }}"
    method: GET
    user: "{{ sat_user }}"
    password: "{{ sat_pass }}"
    force_basic_auth: yes
    validate_certs: no
  register: domain_info
  run_once: true
- name: "Determine domain ID"
  set_fact:
    domain_id: "{{ domain_info.json.id }}"
  run_once: true

- name: "Get id of an environment"
  uri:
    url: "https://{{ groups['satellite6']|first }}/api/environments/production"
    method: GET
    user: "{{ sat_user }}"
    password: "{{ sat_pass }}"
    force_basic_auth: yes
    validate_certs: no
  register: environment_info
  run_once: true
  when: "sat_version is version('6.11', '<')"
- name: "Determine environment ID"
  set_fact:
    environment_id: "{{ environment_info.json.id }}"
  when: "sat_version is version('6.11', '<')"

- name: "Get list of locations"
  uri:
    url: "https://{{ groups['satellite6']|first }}/api/locations?per_page=1000000"
    method: GET
    user: "{{ sat_user }}"
    password: "{{ sat_pass }}"
    force_basic_auth: yes
    validate_certs: no
  register: locations
  run_once: true

- name: "Compose location creation request body for Sat <6.11"
  set_fact:
    location_body: "{{ {'location': {'name': 'Location for ' + inventory_hostname, 'domain_ids': [domain_id], 'environment_ids': [environment_id]}} }}"
  when: "sat_version is version('6.11', '<')"

- name: "Compose location creation request body for Sat >=6.11"
  set_fact:
    location_body: "{{ {'location': {'name': 'Location for ' + inventory_hostname, 'domain_ids': [domain_id]}} }}"
  when: "sat_version is version('6.11', '>=')"

- name: "Create location for our capsule if it is not already there"
  uri:
    url: "https://{{ groups['satellite6']|first }}/api/locations"
    method: POST
    user: "{{ sat_user }}"
    password: "{{ sat_pass }}"
    force_basic_auth: yes
    validate_certs: no
    headers:
      Content-Type: application/json
      Accept: application/json
    body: "{{ location_body }}"
    status_code: 201
    body_format: json
  when: "'Location for ' + inventory_hostname not in locations.json.results|map(attribute='name')"

- name: "Get updated list of locations if needed"
  uri:
    url: "https://{{ groups['satellite6']|first }}/api/locations?per_page=1000000"
    method: GET
    user: "{{ sat_user }}"
    password: "{{ sat_pass }}"
    force_basic_auth: yes
    validate_certs: no
  register: locations
  run_once: true
- name: "Determine location ID"
  set_fact:
    location_id: "{{ item.id }}"
  when: "item.name == 'Location for ' + inventory_hostname"
  with_items: "{{ locations.json.results }}"

- name: "Move capsule's host to the location"
  uri:
    url: "https://{{ groups['satellite6']|first }}/api/hosts/{{ inventory_hostname }}"
    method: PUT
    user: "{{ sat_user }}"
    password: "{{ sat_pass }}"
    force_basic_auth: yes
    validate_certs: no
    headers:
      Content-Type: application/json
      Accept: application/json,version=2
    body: >
      {"host":{"location_id":"{{ location_id }}"}}
    body_format: json

- name: "Move capsule to the location"
  uri:
    url: "https://{{ groups['satellite6']|first }}/api/smart_proxies/{{ inventory_hostname }}"
    method: PUT
    user: "{{ sat_user }}"
    password: "{{ sat_pass }}"
    force_basic_auth: yes
    validate_certs: no
    headers:
      Content-Type: application/json
      Accept: application/json,version=2
    body: >
      {"smart_proxy":{"location_ids":["{{ location_id }}"],"organization_ids":["1"]}}
    body_format: json
...
